use Netflix

select * from datanetflix

-- check missing value and duplicated 

select title from datanetflix
where title IS NULL; 

select director from datanetflix
where director IS NULL; 

select cast from datanetflix
where cast IS NULL; 

select listed_in, title, country from datanetflix
where country IS NULL
order by listed_in ASC; 

select date_added from datanetflix
where date_added IS NULL;
 
select rating from datanetflix
where rating IS NULL;

-- there are misssing value in columns: 1901 (director), 556 (cast), 427 (country), 642 (date_added), 10 (rating)

-- Cleaning Data:

	---DUPLICATED (Tittle)
		--- drop duplicated
			DELETE FROM datanetflix
			WHERE title IN (
				SELECT title
				FROM datanetflix
				GROUP BY title
				HAVING COUNT(*) > 1 
				)
		--- remove ??? title 
			select title from datanetflix
			delete from datanetflix where title in ('????', '??? ???', '??? ?????', '??? ???', '??? ?????', '???? ????? : ??? ??', '??????', '????????', '???????????????????', '???? ????? : ??? ??', '??????', '????????', '???????????????????') 
		--- normalize the title 
			select title from datanetflix
			update datanetflix
			set title = REPLACE(replace(title, '??', ''), '?', '')
	---DUPLICATED (ID)
		--- drop duplicated
				DELETE FROM datanetflix
				WHERE show_id IN (
					SELECT show_id
					FROM datanetflix
					GROUP BY show_id
					HAVING COUNT(*) > 1 
					)

	--- REPLACE MISSING VALUE
		--- replace missing value in date added with 1 January
			--- update and change the null value in data_added into 1 January
				UPDATE datanetflix
				SET date_added = 'January 1, ' + CAST((SELECT TOP 1 release_year FROM datanetflix WHERE date_added IS NULL GROUP BY release_year ORDER BY COUNT(*) DESC) AS VARCHAR(4))
				WHERE date_added IS NULL;
		
			--- check the data again
			select * from datanetflix

		--- replace missing value in rating with most frequence (mode) value
			UPDATE datanetflix
			SET rating = (
				SELECT TOP 1 rating
				FROM datanetflix
				GROUP BY rating
				ORDER BY COUNT(*) DESC
			)
			WHERE rating IS NULL;

		--- replace country by listed in for anime to japan
			-- check the list
			select listed_in, country from datanetflix 
			where listed_in like '%anime%' and country is null
			-- replace country rows by japan
			update datanetflix 
			set country = 
				case 
					when country is null and listed_in like '%Anime%' then 'Japan'
					else country
				end;

		--- replace country by listed in for british to United Kingdom
			select listed_in, country from datanetflix 
			where listed_in like '%british%' and country is null
			-- replace country rows by United Kingdom
			update datanetflix
			set country = 
				case 
					when country is null and listed_in like '%british%' then 'United Kingdom'
					else country
				end;

		--- replace country by listed in for Spanish to Spain
			select listed_in, country from datanetflix 
			where listed_in like '%spanish%' and country is null
			-- replace country rows by United Kingdom
			update datanetflix
			set country = 
				case 
					when country is null and listed_in like '%spanish%' then 'Spain'
					else country
				end;

		--- replace country by listed in for Korean to South Korea
			select listed_in, country from datanetflix 
			where listed_in like '%Korean%' and country is null
			-- replace country rows by United Kingdom
			update datanetflix
			set country = 
				case 
					when country is null and listed_in like '%korean%' then 'South Korea'
					else country
				end;

		--- replace country by listed in for stand up comedy to united states
			select listed_in, country from datanetflix 
			where listed_in like '%Stand-Up comedy%' and country is null
			-- replace country rows by United Kingdom
			update datanetflix
			set country = 
				case 
					when country is null and listed_in like '%Stand-Up comedy%' then 'United States'
					else country
				end;
	--CHECK THE UNMATCH DATE ADDED WITH RELEASE YEAR
		--- replace the date_added that not match with year followed by the year
			UPDATE datanetflix
			SET date_added = CONVERT(varchar(30), DATEFROMPARTS(release_year, MONTH(date_added), DAY(date_added)), 107)

--CHECK THE DATA AGAIN
select * from datanetflix
where director is not null and cast is not null and country is not null
order by title
